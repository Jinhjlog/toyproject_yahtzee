<html>
<head>
  <meta charset='utf-8' />
  <title>App</title>
  <link href='css/styles.css' rel='stylesheet' />
  <script src="https://cdn.socket.io/4.3.2/socket.io.min.js"
          integrity="sha384-KAZ4DtjNhLChOB/hxXuKqhMLYvx3b5MlT55xPEiNmREKRzeEm+RVPlTnAn0ajQNs"
          crossorigin="anonymous"></script>
</head>
<body>
<h1>room</h1>


<h3>대기 중인 유저 목록</h3>
<div id="userList">
  <ul>

  </ul>
</div>

<button id="testbtn">test</button>

</body>
<script>
  //const url = (window.location.href).replace('3000', '3131')
  //const socket = io(url);
  const socket = io("http://localhost:3131");

  const temp_id = Math.floor(Math.random() * 9999) + 1;
  const nickName = 'test' + temp_id.toString();

  const userList = document.getElementById('userList');
  const userList_ul = userList.querySelector('ul');



  if(searchParam('role') == 'host') {
    socket.emit('hostCreateRoom', {
      userId: temp_id,
      userRole : 'host',
      userName: nickName,
      roomNumber: searchParam('roomNumber')
    })
  }else {
    socket.emit('joinRoom', {
      roomNumber: searchParam('roomNumber')
    })
    socket.emit('setPlayInfo', {
      userId: temp_id,
      userRole : 'user',
      roomNumber: searchParam('roomNumber'),
      userName: nickName // user_id를 담아야됨
    })
  }


  socket.on('userJoinRoom', (data) => {
    console.log(data);

  })

  socket.on('refreshUserList', (data) => {
    console.log(data);
  })

  function searchParam(key) {
    return new URLSearchParams(location.search).get(key);
  }

  socket.on('disconnectHost', ()=> {
    location.href = '/'
  })


  const testbtn = document.getElementById('testbtn');

  testbtn.addEventListener('click', () => {
    socket.emit('serverConsoleView', searchParam('roomNumber'));
  })


</script>
</html>